name: Deploy mygoapp to K3s

on:
  push:
    branches: 
      - main
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Get short commit hash
        id: get_commit_hash
        run: echo "COMMIT_HASH=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV

      - name: Build and Push Docker Image Nginx
        run: |
          docker build -f ./docker/nginx/Dockerfile -t ${{ secrets.DOCKER_HUB_USER_NAME }}/cubbit-task-nginx:${{ env.COMMIT_HASH }} --push .        
      
      - name: Build and Push Docker Image App
        run: |
          docker build -f ./docker/simple-go-app/Dockerfile -t ${{ secrets.DOCKER_HUB_USER_NAME }}/cubbit-task-app:${{ env.COMMIT_HASH }} --push .

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: 'latest'

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up kubeconfig
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo "${{ secrets.PROD_KUBECONFIG }}" | base64 -d > kubeconfig
          elif [[ ${{ github.ref }} == 'refs/heads/staging' ]]; then
            echo "${{ secrets.STAGING_KUBECONFIG }}" | base64 -d > kubeconfig
          fi
          chmod 600 kubeconfig
          export KUBECONFIG=./kubeconfig
          chmod 600 kubeconfig
          export KUBECONFIG=./kubeconfig

      - name: Deploy mygoapp with Helm
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            kubectl create ns prod-mygoapp-ns --dry-run=client -o yaml | kubectl apply -f -
          elif [[ ${{ github.ref }} == 'refs/heads/staging' ]]; then
            kubectl create ns staging-mygoapp-ns --dry-run=client -o yaml | kubectl apply -f -
          fi
          helm upgrade --install mygoapp ./charts/simple-go-app \
            --set image.repository=${{ secrets.DOCKER_HUB_USER_NAME }}/cubbit-task-app \
            --set image.tag=${{ env.COMMIT_HASH }} \
            --set environment=${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }} \
            --set apiKey=${{ secrets.API_KEY }} \
            --namespace ${{ github.ref == 'refs/heads/main' && 'prod-mygoapp-ns' || 'staging-mygoapp-ns' }}